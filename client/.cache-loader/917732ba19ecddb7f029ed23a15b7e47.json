{"remainingRequest":"/Users/daikiterai/Desktop/learnReactJS/client/node_modules/thread-loader/dist/cjs.js??ref--4-1!/Users/daikiterai/Desktop/learnReactJS/client/node_modules/babel-loader/lib/index.js??ref--4-2!/Users/daikiterai/Desktop/learnReactJS/client/index.js","dependencies":[{"path":"/Users/daikiterai/Desktop/learnReactJS/client/index.js","mtime":1543149930005},{"path":"/Users/daikiterai/Desktop/learnReactJS/client/node_modules/cache-loader/dist/cjs.js","mtime":1543145130559},{"path":"/Users/daikiterai/Desktop/learnReactJS/client/node_modules/thread-loader/dist/cjs.js","mtime":1539057923244},{"path":"/Users/daikiterai/Desktop/learnReactJS/client/node_modules/babel-loader/lib/index.js","mtime":1539057922793}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport \"core-js/modules/es6.promise\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/*globals module: false process: false */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport createHistory from 'history/createBrowserHistory';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport client from 'axios';\nimport thunk from 'redux-thunk';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport reducer from 'reducer/index';\nimport theme from './theme';\nimport App from './App'; // redux-devtoolの設定\n\nvar composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // 本番時はredux-devtoolを無効化する\n\nif (process.env.NODE_ENV === 'production') {\n  composeEnhancers = compose;\n}\n\nvar initialData = {}; // ブラウザ履歴保存用のストレージを作成\n\nvar history = createHistory(); // axiosをthunkの追加引数に加える\n\nvar thunkWithClient = thunk.withExtraArgument(client); // redux-thunkをミドルウェアに適用、historyをミドルウェアに追加\n\nvar store = createStore(connectRouter(history)(reducer), initialData, composeEnhancers(applyMiddleware(routerMiddleware(history), thunkWithClient)));\n\nfunction render() {\n  return _render.apply(this, arguments);\n}\n\nfunction _render() {\n  _render = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ReactDOM.hydrate(React.createElement(MuiThemeProvider, {\n              theme: theme\n            }, React.createElement(Provider, {\n              store: store\n            }, React.createElement(App, {\n              history: history\n            }))), document.getElementById('root'));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _render.apply(this, arguments);\n}\n\nrender();",{"version":3,"sources":["/Users/daikiterai/Desktop/learnReactJS/client/index.js"],"names":["React","ReactDOM","Provider","MuiThemeProvider","createHistory","createStore","applyMiddleware","compose","client","thunk","connectRouter","routerMiddleware","reducer","theme","App","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","process","env","NODE_ENV","initialData","history","thunkWithClient","withExtraArgument","store","render","hydrate","document","getElementById"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,MAAmB,OAAnB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,OAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,wBAAhD;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CAEA;;AACA,IAAIC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CV,OAAtE,C,CACA;;AACA,IAAIW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCL,EAAAA,gBAAgB,GAAGR,OAAnB;AACD;;AAED,IAAMc,WAAW,GAAG,EAApB,C,CAEA;;AACA,IAAMC,OAAO,GAAGlB,aAAa,EAA7B,C,CACA;;AACA,IAAMmB,eAAe,GAAGd,KAAK,CAACe,iBAAN,CAAwBhB,MAAxB,CAAxB,C,CACA;;AACA,IAAMiB,KAAK,GAAGpB,WAAW,CAACK,aAAa,CAACY,OAAD,CAAb,CAAuBV,OAAvB,CAAD,EAAkCS,WAAlC,EAA+CN,gBAAgB,CAACT,eAAe,CAACK,gBAAgB,CAACW,OAAD,CAAjB,EAA4BC,eAA5B,CAAhB,CAA/D,CAAzB;;SAEeG,M;;;;;;;0BAAf;AAAA;AAAA;AAAA;AAAA;AAEEzB,YAAAA,QAAQ,CAAC0B,OAAT,CACE,oBAAC,gBAAD;AAAkB,cAAA,KAAK,EAAEd;AAAzB,eACE,oBAAC,QAAD;AAAU,cAAA,KAAK,EAAEY;AAAjB,eACE,oBAAC,GAAD;AAAK,cAAA,OAAO,EAAEH;AAAd,cADF,CADF,CADF,EAMEM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAYAH,MAAM","sourcesContent":["/*globals module: false process: false */\nimport React  from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport createHistory from 'history/createBrowserHistory'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport client from 'axios'\nimport thunk from 'redux-thunk'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\n\nimport reducer from 'reducer/index'\nimport theme from './theme'\nimport App from './App'\n\n// redux-devtoolの設定\nlet composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n// 本番時はredux-devtoolを無効化する\nif (process.env.NODE_ENV === 'production') {\n  composeEnhancers = compose\n}\n\nconst initialData = {}\n\n// ブラウザ履歴保存用のストレージを作成\nconst history = createHistory()\n// axiosをthunkの追加引数に加える\nconst thunkWithClient = thunk.withExtraArgument(client)\n// redux-thunkをミドルウェアに適用、historyをミドルウェアに追加\nconst store = createStore(connectRouter(history)(reducer), initialData, composeEnhancers(applyMiddleware(routerMiddleware(history), thunkWithClient)))\n\nasync function render() {\n\n  ReactDOM.hydrate(\n    <MuiThemeProvider theme={theme}>\n      <Provider store={store}>\n        <App history={history} />\n      </Provider>\n    </MuiThemeProvider>,\n    document.getElementById('root'),\n  )\n}\n\nrender()\n"]}]}